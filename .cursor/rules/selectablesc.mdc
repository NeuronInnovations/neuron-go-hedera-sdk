---
description: 
globs: 
alwaysApply: false
---
# Smart Contract Address Configuration Plan

## Overview
Currently, the smart contract address `0x87e2fc64dc1eae07300c2fc50d6700549e1632ca` is hardcoded in multiple places and only configurable via environment variables. This plan outlines a 3-phase approach to make the smart contract address fully configurable with proper precedence (flags > environment > defaults).

## Current State Analysis
- **Hardcoded locations found:**
  - `neuron-go-hedera-sdk/hedera/main.go:29-30` - Forces the hardcoded address even if env var is different
  - Environment templates and examples show the hardcoded address
  - README files reference the hardcoded address

- **Current configuration:**
  - Environment variable: `smart_contract_address` in `.env` file
  - No command-line flag support
  - Hardcoded fallback in `hedera/main.go`

## Phase 1: Remove Hardcoding ✅
**Goal:** Ensure only the environment variable is used, removing all hardcoded references.

### Tasks:
- [x] **1.1** Remove hardcoded smart contract address from `neuron-go-hedera-sdk/hedera/main.go:29-30`
  - **File:** `neuron-go-hedera-sdk/hedera/main.go`
  - **Lines:** 29-30
  - **Action:** Remove the conditional check that forces the hardcoded address
  - **Code to remove:**
    ```go
    if scAddress != "0x87e2fc64dc1eae07300c2fc50d6700549e1632ca" {
        scAddress = "0x87e2fc64dc1eae07300c2fc50d6700549e1632ca"
        commonlib.UpdateEnvVariable("smart_contract_address", scAddress, commonlib.MyEnvFile)
    }
    ```

- [x] **1.2** Add validation for smart contract address format
  - **File:** `neuron-go-hedera-sdk/hedera/main.go`
  - **Action:** Add validation to ensure the address is a valid Ethereum address format
  - **Validation:** Check if address starts with "0x" and has correct length

- [x] **1.3** Update environment variable validation in `neuron-sdk.go`
  - **File:** `neuron-go-hedera-sdk/neuron-sdk.go`
  - **Lines:** 62-65
  - **Action:** Enhance validation to check for valid address format, not just empty string

## Phase 2: Add Command-Line Flag Support ✅
**Goal:** Add a command-line flag that takes precedence over environment variables.

### Tasks:
- [x] **2.1** Add smart contract address flag to flags.go
  - **File:** `neuron-go-hedera-sdk/common-lib/flags.go`
  - **Action:** Add new flag variable and initialization
  - **Flag name:** `--smart-contract-address`
  - **Description:** "Smart contract address (overrides environment variable)"

- [x] **2.2** Update flag initialization in flags.go
  - **File:** `neuron-go-hedera-sdk/common-lib/flags.go`
  - **Action:** Add flag initialization in `InitFlags()` function

- [x] **2.3** Modify smart contract address resolution logic
  - **File:** `neuron-go-hedera-sdk/hedera/main.go`
  - **Action:** Update `GetHRpcClient()` to check flag first, then environment variable
  - **Precedence order:** Flag > Environment Variable > Error (no default)

- [x] **2.4** Update validation logic in neuron-sdk.go
  - **File:** `neuron-go-hedera-sdk/neuron-sdk.go`
  - **Action:** Update validation to check both flag and environment variable

## Phase 3: Update Documentation ✅
**Goal:** Update all documentation to reflect the new configuration options.

### Tasks:
- [ ] **3.1** Update main README.md
  - **File:** `neuron-go-hedera-sdk/README.md`
  - **Action:** Update smart contract address documentation section
  - **Content:** Add flag documentation, update precedence order, remove hardcoded examples

- [ ] **3.2** Update wrapper README.md
  - **File:** `neuron-nodered-sdk-wrapper/README.md`
  - **Action:** Update smart contract address documentation
  - **Content:** Add flag documentation, update examples

- [ ] **3.3** Update environment templates
  - **Files:** 
    - `neuron-nodered-sdk-wrapper/.buyer-env.template`
    - `neuron-nodered-sdk-wrapper/.seller-env.template`
  - **Action:** Replace hardcoded address with placeholder comment
  - **Content:** Add comment explaining the flag precedence

- [ ] **3.4** Add usage examples
  - **File:** `neuron-go-hedera-sdk/README.md`
  - **Action:** Add command-line usage examples showing flag usage
  - **Examples:** Show how to use `--smart-contract-address` flag

## Implementation Notes

### Precedence Order (Phase 2+)
1. **Command-line flag** (`--smart-contract-address`) - Highest priority
2. **Environment variable** (`smart_contract_address`) - Medium priority  
3. **Error** - No default fallback, must be explicitly set

### Validation Requirements
- Must be a valid Ethereum address format (0x + 40 hex characters)
- Must not be empty
- Should validate checksum if possible

### Backward Compatibility
- Environment variable configuration continues to work
- No breaking changes to existing `.env` file usage
- Flag is optional and only overrides when provided

## Testing Checklist
- [ ] Environment variable only (existing behavior)
- [ ] Command-line flag only
- [ ] Command-line flag overriding environment variable
- [ ] Invalid address format handling
- [ ] Missing address error handling
- [ ] Integration with existing functionality

## Files to Modify
1. `neuron-go-hedera-sdk/hedera/main.go` ✅
2. `neuron-go-hedera-sdk/neuron-sdk.go` ✅
3. `neuron-go-hedera-sdk/common-lib/flags.go` ✅
4. `neuron-go-hedera-sdk/README.md`
5. `neuron-nodered-sdk-wrapper/README.md`
6. `neuron-nodered-sdk-wrapper/.buyer-env.template`
7. `neuron-nodered-sdk-wrapper/.seller-env.template`
